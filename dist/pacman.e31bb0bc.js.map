{"version":3,"sources":["setup.js","ghostmoves.js","GameBoard.js","Pacman.js","Ghost.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["GRID_SIZE","exports","GRID_SIZE_2","CELL_SIZE","DIRECTIONS","ArrowLeft","code","movement","rotation","ArrowUp","ArrowRight","ArrowDown","DIRECTIONS_2","OBJECT_TYPE","BLANK","WALL","DOT","BLINKY","PINKY","INKY","CLYDE","PILL","PACMAN","GHOST","SCARED","GHOSTLAIR","CLASS_LIST","LEVEL","LEVEL_2","_setup","require","randomMovement","position","direction","objectExist","dir","nextMovePos","keys","Object","key","Math","floor","random","length","_typeof","o","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","n","toString","call","slice","name","Array","from","test","iter","isArray","len","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","_createClass","protoProps","staticProps","t","_toPrimitive","String","r","e","toPrimitive","Number","GameBoard","DOMGrid","dotCount","grid","value","showGameStatus","gameWin","div","document","createElement","classList","add","innerHTML","concat","appendChild","createGrid","level","_this","gridSize","arguments","undefined","style","cssText","forEach","square","push","addObject","pos","classes","_this$grid$pos$classL","apply","removeObject","_this$grid$pos$classL2","remove","object","contains","rotateDiv","deg","transform","moveCharacter","character","shouldMove","_character$getNextMov","getNextMove","bind","_character$makeMove","makeMove","classesToRemove","classesToAdd","setNewPos","resetPacmanPosition","pacman","createGameBoard","board","_default","default","Pacman","speed","startPos","lives","timer","powerPill","handleKeyInput","keyCode","handleCollision","gameBoard","gameOver","console","log","testPacmanCreation","testShouldMoveMethod","testGetNextMoveMethod","result1","result2","_ghostmoves","Ghost","isScared","_this$movement","_GameBoard","_interopRequireDefault","_Pacman","_Ghost","_munch","_pill","_game_start","_death","_eat_ghost","obj","__esModule","gameGrid","querySelector","scoreTable","startButton","nextLevelButton","POWER_PILL_TIME","GLOBAL_SPEED","TOTAL_LEVELS","currentLevel","score","powerPillActive","powerPillTimer","playAudio","audio","soundEffect","Audio","play","_grid","soundGameOver","removeEventListener","clearInterval","updateVisualLives","lifeDivs","querySelectorAll","lifeDiv","index","checkCollision","ghosts","collidedGhost","find","ghost","soundGhost","lifeElement","gameLoop","soundDot","soundPill","clearTimeout","setTimeout","addEventListener","startGame","soundGameStart","allLifeElements","setInterval","nextLevel","directions","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,SAAS,GAAAC,OAAA,CAAAD,SAAA,GAAG,EAAE;AACpB,IAAME,WAAW,GAAAD,OAAA,CAAAC,WAAA,GAAG,EAAE;AACtB,IAAMC,SAAS,GAAAF,OAAA,CAAAE,SAAA,GAAG,EAAE;AACpB,IAAMC,UAAU,GAAAH,OAAA,CAAAG,UAAA,GAAG;EACtBC,SAAS,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC,CAAC;IACZC,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACLH,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAACP,SAAS;IACpBQ,QAAQ,EAAE;EACd,CAAC;EACDE,UAAU,EAAE;IACRJ,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE;EACd,CAAC;EACDG,SAAS,EAAE;IACPL,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAEP,SAAS;IACnBQ,QAAQ,EAAE;EACd;AACJ,CAAC;AAGM,IAAMI,YAAY,GAAAX,OAAA,CAAAW,YAAA,GAAG;EACxBP,SAAS,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC,CAAC;IACZC,QAAQ,EAAE;EACd,CAAC;EACDC,OAAO,EAAE;IACLH,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAACL;IACX;EACJ,CAAC;EACDQ,UAAU,EAAE;IACRJ,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE;EACd,CAAC;EACDG,SAAS,EAAE;IACPL,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAEL;IACV;EACJ;AACJ,CAAC;AAGM,IAAMW,WAAW,GAAAZ,OAAA,CAAAY,WAAA,GAAG;EACvBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE;AACf,CAAC;;AAED;AACO,IAAMC,UAAU,GAAAzB,OAAA,CAAAyB,UAAA,GAAG,CACtBb,WAAW,CAACC,KAAK,EACjBD,WAAW,CAACE,IAAI,EAChBF,WAAW,CAACG,GAAG,EACfH,WAAW,CAACI,MAAM,EAClBJ,WAAW,CAACK,KAAK,EACjBL,WAAW,CAACM,IAAI,EAChBN,WAAW,CAACO,KAAK,EACjBP,WAAW,CAACQ,IAAI,EAChBR,WAAW,CAACS,MAAM,EAClBT,WAAW,CAACY,SAAS,CACxB;;AAED;AACO,IAAME,KAAK,GAAA1B,OAAA,CAAA0B,KAAA,GAAG,CACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,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","file":"pacman.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export const GRID_SIZE = 20;\nexport const GRID_SIZE_2 = 20;\nexport const CELL_SIZE = 20;\nexport const DIRECTIONS = {\n    ArrowLeft: {\n        code: 37,\n        movement: -1,\n        rotation: 180\n    },\n    ArrowUp: {\n        code: 38,\n        movement: -GRID_SIZE,\n        rotation: 270\n    },\n    ArrowRight: {\n        code: 39,\n        movement: 1,\n        rotation: 0\n    },\n    ArrowDown: {\n        code: 40,\n        movement: GRID_SIZE,\n        rotation: 90\n    }\n};\n\n\nexport const DIRECTIONS_2 = {\n    ArrowLeft: {\n        code: 37,\n        movement: -1,\n        rotation: 180\n    },\n    ArrowUp: {\n        code: 38,\n        movement: -GRID_SIZE_2,\n        // rotation: 270\n    },\n    ArrowRight: {\n        code: 39,\n        movement: 1,\n        rotation: 0\n    },\n    ArrowDown: {\n        code: 40,\n        movement: GRID_SIZE_2,\n        // rotation: 90\n    }\n};\n\n\nexport const OBJECT_TYPE = {\n    BLANK: 'blank',\n    WALL: 'wall',\n    DOT: 'dot',\n    BLINKY: 'blinky',\n    PINKY: 'pinky',\n    INKY: 'inky',\n    CLYDE: 'clyde',\n    PILL: 'pill',\n    PACMAN: 'pacman',\n    GHOST: 'ghost',\n    SCARED: 'scared',\n    GHOSTLAIR: 'lair'\n};\n\n// Lookup array for classes\nexport const CLASS_LIST = [\n    OBJECT_TYPE.BLANK,\n    OBJECT_TYPE.WALL,\n    OBJECT_TYPE.DOT,\n    OBJECT_TYPE.BLINKY,\n    OBJECT_TYPE.PINKY,\n    OBJECT_TYPE.INKY,\n    OBJECT_TYPE.CLYDE,\n    OBJECT_TYPE.PILL,\n    OBJECT_TYPE.PACMAN,\n    OBJECT_TYPE.GHOSTLAIR\n];\n\n// prettier-ignore\nexport const LEVEL = [\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n    1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n    1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n    1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n    0, 0, 0, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 0, 0, 0,\n    0, 0, 0, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 0, 0, 0,\n    1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n    1, 0, 0, 0, 2, 2, 2, 1, 9, 9, 9, 9, 1, 2, 2, 2, 0, 0, 0, 1,\n    1, 1, 1, 1, 2, 1, 2, 1, 9, 9, 9, 9, 1, 2, 1, 2, 1, 1, 1, 1,\n    0, 0, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 0, 0, 0,\n    0, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 2, 1, 2, 1, 0, 0, 0,\n    1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1,\n    1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1,\n    1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 7, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 7, 1,\n    1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n];\n\nexport const LEVEL_2 = [\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1,\n    1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 7, 2, 2, 2, 1, 2, 1,\n    1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 1,\n    1, 1, 1, 2, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n    1, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 2, 1, 2, 2, 2, 1,\n    1, 1, 1, 2, 1, 2, 1, 1, 0, 0, 0, 9, 1, 1, 2, 1, 2, 1, 1, 1,\n    1, 1, 1, 7, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,\n    1, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 1,\n    1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 2, 1, 7, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1,\n    1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1,\n    1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1,\n    1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n\n];","// Importing constants from setup.js\nimport { DIRECTIONS, OBJECT_TYPE, DIRECTIONS_2 } from './setup';\n\n// Primitive random movement function\nexport function randomMovement(position, direction, objectExist) {\n    // Initialize variables with the current direction and next move position\n    let dir = direction;\n    let nextMovePos = position + dir.movement;\n\n    // Create an array from the directions object's keys\n    const keys = Object.keys(DIRECTIONS);\n\n    // Loop until a valid next move position is found\n    while (\n        objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n        objectExist(nextMovePos, OBJECT_TYPE.GHOST)\n    ) {\n        // Get a random key from the array of direction keys\n        const key = keys[Math.floor(Math.random() * keys.length)];\n\n        // Set the new direction based on the random key\n        dir = DIRECTIONS[key];\n\n        // Set the next move position using the new direction\n        nextMovePos = position + dir.movement;\n    }\n\n    // Return an object with the updated next move position and direction\n    return { nextMovePos, direction: dir };\n}","import { GRID_SIZE, CELL_SIZE, OBJECT_TYPE, CLASS_LIST } from './setup';\n\nclass GameBoard {\n    constructor(DOMGrid) {\n        this.dotCount = 0;\n        this.grid = [];\n        this.DOMGrid = DOMGrid;\n    }\n\n\n    showGameStatus(gameWin) {\n        // Create and show game win or game over\n        const div = document.createElement('div');\n        div.classList.add('game-status');\n        div.innerHTML = `${gameWin ? 'WIN!' : 'GAME OVER!'}`;\n        this.DOMGrid.appendChild(div);\n    }\n\n    createGrid(level, gridSize = GRID_SIZE) {\n        this.dotCount = 0;\n        this.grid = [];\n        this.DOMGrid.innerHTML = '';\n        // First set correct amount of columns based on Grid Size and Cell Size\n        this.DOMGrid.style.cssText = `grid-template-columns: repeat(${gridSize}, ${CELL_SIZE}px);`;\n\n        level.forEach((square) => {\n            const div = document.createElement('div');\n            div.classList.add('square', CLASS_LIST[square]);\n            div.style.cssText = `width: ${CELL_SIZE}px; height: ${CELL_SIZE}px;`;\n            this.DOMGrid.appendChild(div);\n            this.grid.push(div);\n\n            // Add dots\n            if (CLASS_LIST[square] === OBJECT_TYPE.DOT) this.dotCount++;\n        });\n    }\n\n    addObject(pos, classes) {\n        this.grid[pos].classList.add(...classes);\n    }\n\n    removeObject(pos, classes) {\n            this.grid[pos].classList.remove(...classes);\n        }\n        // Can have an arrow function here cause of this binding\n    objectExist(pos, object) {\n        return this.grid[pos].classList.contains(object);\n    };\n\n    rotateDiv(pos, deg) {\n        this.grid[pos].style.transform = `rotate(${deg}deg)`;\n    }\n\n    moveCharacter(character) {\n        if (character.shouldMove()) {\n            const { nextMovePos, direction } = character.getNextMove(\n                this.objectExist.bind(this)\n            );\n            const { classesToRemove, classesToAdd } = character.makeMove();\n\n            if (character.rotation && nextMovePos !== character.pos) {\n                // Rotate\n                this.rotateDiv(nextMovePos, character.dir.rotation);\n                // Rotate the previous div back\n                this.rotateDiv(character.pos, 0);\n            }\n\n            this.removeObject(character.pos, classesToRemove);\n            this.addObject(nextMovePos, classesToAdd);\n\n            character.setNewPos(nextMovePos, direction);\n        }\n    }\n\n    resetPacmanPosition(pacman) {\n        this.removeObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n        pacman.setNewPos(287); // Set the initial position or any desired position\n        this.addObject(pacman.pos, [OBJECT_TYPE.PACMAN]);\n    }\n\n    static createGameBoard(DOMGrid, level) {\n        const board = new this(DOMGrid);\n        board.createGrid(level);\n        return board;\n    }\n}\n\nexport default GameBoard;","// Importing constants from setup.js\nimport { OBJECT_TYPE, DIRECTIONS, } from './setup';\n\n// Pacman class definition\nclass Pacman {\n    // Constructor for Pacman\n    constructor(speed, startPos, lives = 3) {\n        this.pos = startPos; // Initial position\n        this.speed = speed; // Speed of Pacman\n        this.dir = null; // Direction of movement\n        this.timer = 0; // Timer for movement\n        this.powerPill = false; // Flag indicating if Pacman has power pill\n        this.rotation = true; // Flag indicating if rotation is enabled\n        this.lives = lives;\n    }\n\n    // Method to check if Pacman should move\n    shouldMove() {\n        if (!this.dir) return false;\n\n        if (this.timer === this.speed) {\n            this.timer = 0;\n            return true;\n        }\n        this.timer++;\n    }\n\n\n    // Method to get the next move of Pacman\n    getNextMove(objectExist) {\n        let nextMovePos = this.pos + this.dir.movement;\n\n        // Check for collision with a wall or ghost lair\n        if (\n            objectExist(nextMovePos, OBJECT_TYPE.WALL) ||\n            objectExist(nextMovePos, OBJECT_TYPE.GHOSTLAIR)\n        ) {\n            nextMovePos = this.pos; // Reset position if collision\n        }\n\n        // Return an object with the updated next move position and direction\n        return { nextMovePos, direction: this.dir };\n    }\n\n    // Method to define Pacman's move\n    makeMove() {\n        const classesToRemove = [OBJECT_TYPE.PACMAN];\n        const classesToAdd = [OBJECT_TYPE.PACMAN];\n\n        // Return an object with classes to remove and classes to add\n        return { classesToRemove, classesToAdd };\n    }\n\n    // Method to set the new position of Pacman\n    setNewPos(nextMovePos) {\n        this.pos = nextMovePos;\n    }\n\n    // Method to handle keyboard input for Pacman\n    handleKeyInput(e, objectExist) {\n        let dir;\n\n        // Check if the key pressed is an arrow key\n        if (e.keyCode >= 37 && e.keyCode <= 40) {\n            dir = DIRECTIONS[e.key];\n        } else {\n            return; // Do nothing if a non-arrow key is pressed\n        }\n\n        // Calculate the next move position\n        const nextMovePos = this.pos + dir.movement;\n\n        // Check if the next move collides with a wall\n        if (objectExist(nextMovePos, OBJECT_TYPE.WALL)) return;\n\n        // Set the direction for Pacman\n        this.dir = dir;\n    }\n    handleCollision(gameBoard, gameOver) {\n        console.log('Handling collision. Lives before:', this.lives);\n        this.lives--;\n\n        if (this.lives <= 0) {\n            // Trigger game over logic here\n            console.log('Game over!');\n            gameOver(this, gameBoard);\n        } else {\n            // Reset Pacman's position\n            console.log('Resetting position.');\n            gameBoard.resetPacmanPosition(this);\n        }\n\n        console.log('Lives after:', this.lives);\n    }\n}\n\n// Test 1: Pac-Man creation test\nconst testPacmanCreation = () => {\n    const pacman = new Pacman(1, 0); // Adjust the initial properties as needed\n    console.log('Test 1: Pac-Man creation test');\n    console.log('Pacman object:', pacman);\n};\n\n// Test 2: Testing the shouldMove method\nconst testShouldMoveMethod = () => {\n    const pacman = new Pacman(1, 0); // Adjust the initial properties as needed\n    console.log('Test 2: Testing the shouldMove method');\n\n    // Case 1: direction is null\n    pacman.dir = null;\n    console.log('Case 1 - ShouldMove:', pacman.shouldMove()); // Expected: false\n\n    // Case 2: timer reaches speed\n    pacman.dir = { movement: 1 }; // Set a direction for testing\n    pacman.timer = pacman.speed;\n    console.log('Case 2 - ShouldMove:', pacman.shouldMove()); // Expected: true\n};\n\n// Test 3: Testing the getNextMove method\nconst testGetNextMoveMethod = () => {\n    const pacman = new Pacman(1, 0); // Adjust the initial properties as needed\n    console.log('Test 3: Testing the getNextMove method');\n\n    // Case 1: next move is not blocked\n    pacman.dir = { movement: 1 }; // Set a direction for testing\n    const result1 = pacman.getNextMove(() => false); // Mock objectExist function\n    console.log('Case 1 - Next Move Result:', result1);\n\n    // Case 2: next move is blocked\n    const result2 = pacman.getNextMove(() => true); // Mock objectExist function\n    console.log('Case 2 - Next Move Result:', result2);\n};\n\n// Add more test functions for the remaining methods...\n\n// Run the tests\ntestPacmanCreation();\ntestShouldMoveMethod();\ntestGetNextMoveMethod();\n// Call other test functions...\n\n// Export the Pacman class\nexport default Pacman;","import { DIRECTIONS, OBJECT_TYPE } from './setup';\nimport { randomMovement } from './ghostmoves';\n\nclass Ghost {\n    constructor(speed = 5, startPos, movement, name) {\n        this.name = name;\n        this.movement = movement;\n        this.startPos = startPos;\n        this.pos = startPos;\n        this.dir = DIRECTIONS.ArrowRight;\n        this.speed = speed;\n        this.timer = 0;\n        this.isScared = false;\n        this.rotation = false;\n    }\n\n    shouldMove() {\n        if (this.timer === this.speed) {\n            this.timer = 0;\n            return true;\n        }\n        this.timer++;\n    }\n\n    getNextMove(objectExist) {\n        // Call move algoritm here\n        const { nextMovePos, direction } = this.movement(\n            this.pos,\n            this.dir,\n            objectExist\n        );\n        return { nextMovePos, direction };\n    }\n\n    makeMove() {\n        const classesToRemove = [OBJECT_TYPE.GHOST, OBJECT_TYPE.SCARED, this.name];\n        let classesToAdd = [OBJECT_TYPE.GHOST, this.name];\n\n        if (this.isScared) classesToAdd = [...classesToAdd, OBJECT_TYPE.SCARED];\n\n        return { classesToRemove, classesToAdd };\n    }\n\n    setNewPos(nextMovePos, direction) {\n        this.pos = nextMovePos;\n        this.dir = direction;\n    }\n}\n\nexport default Ghost;","// Importing necessary modules and assets\nimport { LEVEL, LEVEL_2, OBJECT_TYPE, GRID_SIZE_2, DIRECTIONS_2 } from './setup';\nimport { randomMovement } from './ghostmoves';\n// Classes\nimport GameBoard from './GameBoard';\nimport Pacman from './Pacman';\nimport Ghost from './Ghost';\n// Sounds\nimport soundDot from './sounds/munch.wav';\nimport soundPill from './sounds/pill.wav';\nimport soundGameStart from './sounds/game_start.wav';\nimport soundGameOver from './sounds/death.wav';\nimport soundGhost from './sounds/eat_ghost.wav';\n// Dom Elements\nconst gameGrid = document.querySelector('#game');\nconst scoreTable = document.querySelector('#score');\nconst startButton = document.querySelector('#start-button');\nconst nextLevelButton = document.querySelector('#next-level-button');\n// Game constants\nconst POWER_PILL_TIME = 10000; // ms\nconst GLOBAL_SPEED = 80; // ms\nconst gameBoard = GameBoard.createGameBoard(gameGrid, LEVEL);\nconst TOTAL_LEVELS = 2; // Set the total number of levels here\n\nlet currentLevel = 1; // Initialize the current level\n// Initial setup\nlet score = 0;\nlet timer = null;\nlet gameWin = false;\nlet powerPillActive = false;\nlet powerPillTimer = null;\nlet lives = 2;\n\n\n\n\n\n\n\n\n// --- AUDIO --- //\nfunction playAudio(audio) {\n    const soundEffect = new Audio(audio);\n    soundEffect.play();\n}\n\n\n\n\n// --- GAME CONTROLLER --- //\nfunction gameOver(pacman, _grid) {\n    playAudio(soundGameOver);\n\n    document.removeEventListener('keydown', (e) =>\n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n\n    gameBoard.showGameStatus(gameWin);\n\n    clearInterval(timer);\n\n\n    // Decrement lives\n    lives--;\n\n    updateVisualLives(lives);\n\n    // Check if the game is over\n    if (lives <= 0) {\n        // Trigger game over logic here\n        console.log('Game over!');\n        // You may want to add additional game over logic here if needed\n    } else {\n        // Reset Pacman's position\n        console.log('Resetting position.');\n        gameBoard.resetPacmanPosition(pacman);\n        // Show start button\n        startButton.classList.remove('hide');\n    }\n\n    // Update lives display\n    // updateLivesDisplay(lives);\n    // Show start button\n    startButton.classList.remove('hide');\n}\n\nfunction updateVisualLives(lives) {\n    const lifeDivs = document.querySelectorAll('.life');\n    console.log('Updating visual lives. Lives:', lives);\n    lifeDivs.forEach((lifeDiv, index) => {\n        if (index < lives) {\n            // Show the div for remaining lives\n            lifeDiv.classList.remove('hidden');\n        } else {\n            // Hide the div for lost lives\n            lifeDiv.classList.add('hidden');\n        }\n    });\n\n\n}\n\nfunction checkCollision(pacman, ghosts, updateVisualLives) {\n    // Check if Pacman collides with ghosts\n    const collidedGhost = ghosts.find((ghost) => pacman.pos === ghost.pos);\n    // updateLivesDisplay(lives);\n\n    if (collidedGhost) {\n        if (pacman.powerPill) {\n            // If Pacman has power pill, eat ghost\n            playAudio(soundGhost);\n            gameBoard.removeObject(collidedGhost.pos, [\n                OBJECT_TYPE.GHOST,\n                OBJECT_TYPE.SCARED,\n                collidedGhost.name\n            ]);\n            collidedGhost.pos = collidedGhost.startPos;\n            score += 100;\n        } else {\n            // If Pacman does not have power pill, game over\n            pacman.handleCollision(gameBoard, gameOver, updateVisualLives);\n\n            // Add a class to life1 when pacman.pos is equal to ghost.pos\n            if (pacman.lives === 2) {\n                const lifeElement = document.querySelector('#life3');\n                if (lifeElement) {\n                    lifeElement.classList.add('hidden');\n                }\n            }\n\n            if (pacman.lives === 1) {\n                const lifeElement = document.querySelector('#life2');\n                if (lifeElement) {\n                    lifeElement.classList.add('hidden');\n                }\n            }\n\n            if (pacman.lives === 0) {\n                const lifeElement = document.querySelector('#life1');\n                if (lifeElement) {\n                    lifeElement.classList.add('hidden');\n                }\n            }\n\n        }\n    }\n}\n\nfunction gameLoop(pacman, ghosts) {\n\n    // 1. Move Pacman\n    gameBoard.moveCharacter(pacman);\n    // 2. Check Ghost collision on the old positions\n    checkCollision(pacman, ghosts);\n    // 3. Move ghosts\n    ghosts.forEach((ghost) => gameBoard.moveCharacter(ghost));\n    // 4. Do a new ghost collision check on the new positions\n    checkCollision(pacman, ghosts);\n    // 5. Check if Pacman eats a dot\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.DOT)) {\n        playAudio(soundDot);\n\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.DOT]);\n        // Remove a dot\n        gameBoard.dotCount--;\n        // Add Score\n        score += 10;\n    }\n    // 6. Check if Pacman eats a power pill\n    if (gameBoard.objectExist(pacman.pos, OBJECT_TYPE.PILL)) {\n        playAudio(soundPill);\n\n        gameBoard.removeObject(pacman.pos, [OBJECT_TYPE.PILL]);\n\n        pacman.powerPill = true;\n        score += 50;\n\n        clearTimeout(powerPillTimer);\n        powerPillTimer = setTimeout(\n            () => (pacman.powerPill = false),\n            POWER_PILL_TIME\n        );\n    }\n    // 7. Change ghost scare mode depending on power pill\n    if (pacman.powerPill !== powerPillActive) {\n        powerPillActive = pacman.powerPill;\n        ghosts.forEach((ghost) => (ghost.isScared = pacman.powerPill));\n    }\n    // 8. Check if all dots have been eaten\n    if (gameBoard.dotCount === 0) {\n        if (currentLevel === TOTAL_LEVELS) {\n            // If it's the last level, trigger game win\n            gameWin = true;\n            gameOver(pacman, gameGrid);\n        } else {\n            // Increment the current level\n            currentLevel++;\n\n            // Show the \"Next Level\" button\n            nextLevelButton.classList.remove('hide');\n\n            // Clear the game loop timer\n            clearInterval(timer);\n        }\n    }\n\n    // 9. Show new score\n    scoreTable.innerHTML = score;\n\n\n\n}\n\n\n\n\n\n\n// Initialize game\nstartButton.addEventListener('click', startGame);\n\nfunction startGame() {\n    // Play the game start sound\n    playAudio(soundGameStart);\n\n    // Reset game state\n    gameWin = false;\n    powerPillActive = false;\n    score = 0;\n\n    // Show all life elements\n    const allLifeElements = document.querySelectorAll('.life');\n    allLifeElements.forEach((lifeElement) => {\n        lifeElement.classList.remove('hidden');\n        lifeElement.classList.add('showing-live');\n    });\n    // Hide the start button\n    startButton.classList.add('hide');\n\n    // Create the game grid\n    gameBoard.createGrid(LEVEL);\n\n    // Initialize Pacman\n    const pacman = new Pacman(2, 287);\n    gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n    // Listen for key input to control Pacman\n    document.addEventListener('keydown', (e) =>\n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard))\n    );\n\n    // Initialize Ghosts\n    const ghosts = [\n        new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n    ];\n    // updateLivesDisplay(lives);\n    // Gameloop\n    timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\nfunction nextLevel() {\n    // Update the grid size and create the new game board\n    gameBoard.createGrid(currentLevel === 1 ? LEVEL_2 : LEVEL_2, currentLevel === 1 ? GRID_SIZE_2 : GRID_SIZE_2);\n    // Reset other game-related variables if needed\n    score = 0;\n    gameWin = false;\n    powerPillActive = false;\n\n    // Create Pacman and ghosts for the new level\n    const pacman = new Pacman(2, 287);\n    gameBoard.addObject(287, [OBJECT_TYPE.PACMAN]);\n    document.addEventListener('keydown', (e) => {\n        const directions = currentLevel === 1 ? directions : DIRECTIONS_2;\n\n\n        pacman.handleKeyInput(e, gameBoard.objectExist.bind(gameBoard), directions)\n    });\n\n    const ghosts = [\n        new Ghost(5, 188, randomMovement, OBJECT_TYPE.BLINKY),\n        new Ghost(4, 209, randomMovement, OBJECT_TYPE.PINKY),\n        new Ghost(3, 230, randomMovement, OBJECT_TYPE.INKY),\n        new Ghost(2, 251, randomMovement, OBJECT_TYPE.CLYDE)\n    ];\n\n    // Start the game loop for the new level\n    timer = setInterval(() => gameLoop(pacman, ghosts), GLOBAL_SPEED);\n}\n\n\n\n\n// Initialize game\nstartButton.addEventListener('click', startGame);\n\n\n\n\n\n// uncomment later\nnextLevelButton.addEventListener('click', () => {\n    // Hide the \"Next Level\" button\n    nextLevelButton.classList.add('hide');\n    // Move to the next level\n    nextLevel();\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}